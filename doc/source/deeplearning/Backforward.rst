.. _header-n0:

反向传播算法
============

.. _header-n3:

计算图(computational graph)
---------------------------

   计算图将计算过程用图形表示出来，这里的图形是指数据结构图，通过多个节点和边表示；

用计算图解题时，需要按如下流程进行：

-  构建计算图；

-  在计算图上从左到右进行计算(正向传播, forward propagation)；

-  在计算图上从右到左进行计算(反向传播, backward propagation)；

   -  将上游传过来的值E乘以节点的局部导数
      :math:`\frac{\partial y}{\partial x}`\ ，然后将结果传递给下一个节点；

计算图的优点：

-  局部计算；

   -  无论全局多么复杂的计算，都可以通过局部计算使各个节点致力于简单的计算，从而简化问题；

-  利用计算图可以将中间的计算结果保存起来；

-  可以通过反向传播高效计算导数；

-  综上：可以通过正向传播和反向传播高效地计算各个变量的导数值；

.. _header-n30:

链式法则(chain rule)
--------------------

计算图的正向传播将计算结果正向(从左到右)传递，而反向传播将局部导数向正方向的反方向(从右到左)传递；

**复合函数：**

-  复合函数是由多个函数构成的函数；

**链式法则：**

-  如果某个函数由复合函数表示，则该复合函数的导数可以用构成复合函数的各个函数的导数的乘积表示；

.. _header-n41:

反向传播
--------

-  加法节点的反向传播

   -  加法的反向传播只是将上游的值传给下游，并不需要正向传播的输入信号；

-  乘法节点的反向传播

   -  乘法的反向传播会将上游的值乘以正向传播时的输入信号的“翻转值”后传递给下游，翻转值表示一种翻转关系；

   -  乘法的反向传播需要正向传播时的输入信号值；因此，实现乘法节点的反向传播时，要保存正向传播的输入信号；
