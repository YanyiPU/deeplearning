
TensorFlow Performance
========================

1.使用 tf.function 提升性能
------------------------------------------

1.1 @tf.funciton: 图执行模式
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    虽然目前 TensorFlow 默认的即时执行模式具有灵活及易调试的特性，但在特定的场合，
    例如追求高性能或部署模型时，依然希望使用图执行模式，将模型转换为高效的 TensorFlow 图模型。

    TensorFlow 2 提供了 ``tf.function`` 模块，结合 AutoGraph 机制，使得我们仅需加入一个简单的
    ``@tf.function`` 修饰符，就能轻松将模型以图执行模式运行。

1.2 @tf.function 基础使用方法
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    ``@tf.function`` 的基础使用非常简单，只需要将我们希望以图执行模式运行的代码封装在一个函数内，
    并在函数前面加上 ``@tf.function`` 即可.

    .. code-block:: python

        pass





1.3 @tf.function 内在机制
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~





1.4 AutoGraph: 将 Python 控制流转化为 TensorFlow 计算图
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



1.5 使用传统的 tf.Session
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2.分析 TenforFlow 的性能
------------------------------------------


3.图优化
------------------------------------------


4.混合精度
------------------------------------------


